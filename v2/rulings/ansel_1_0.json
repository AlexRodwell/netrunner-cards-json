[
  {
    "card_id": "ansel_1_0",
    "date_creation": "2021-10-09 23:08:33",
    "date_update": "2021-10-11 23:20:34",
    "text_ruling": "Can the Runner use [Carnivore](/en/card/30003) if the last subroutine on [Ansel 1.0](/en/card/30038) resolved earlier in the run?\n>No. That subroutine prohibits the Runner from trashing cards they access in any way, not just by using the basic trash ability.\n",
    "ruling_source_id": "nsg_rules_team"
  },
  {
    "card_id": "ansel_1_0",
    "date_creation": "2021-10-10 22:02:43",
    "date_update": "2021-10-10 22:02:43",
    "text_ruling": "If the Corp installs a piece of ice with the second subroutine on [Ansel 1.0](/en/card/30038) and trashes [Ansel 1.0](/en/card/30038) as part of the installation process, what happens?\n>If the Corp trashes [Ansel 1.0](/en/card/30038) this way, they finish resolving the install instruction, then the encounter ends and the Runner passes [Ansel 1.0](/en/card/30038)’s former position. The third subroutine on [Ansel 1.0](/en/card/30038) will not have the opportunity to resolve, because it is no longer active.",
    "ruling_source_id": "nsg_rules_team"
  },
  {
    "card_id": "ansel_1_0",
    "date_creation": "2021-10-10 22:03:22",
    "date_update": "2021-10-10 22:03:22",
    "text_ruling": "If the Corp installs a piece of ice with the second subroutine on [Ansel 1.0](/en/card/30038), can they force the Runner to approach the new ice by trashing [Ansel 1.0](/en/card/30038) and/or other ice protecting the attacked server as part of that install?\n>No. The new ice must be installed in the outermost position protecting the server. Since the Runner already has a position relative to the other ice protecting the server, the new ice will necessarily have a position outward from the Runner. Trashing multiple ice does not allow new ice to “leapfrog” the Runner’s position, but just moves the Runner 1 position toward the server for each trashed piece of ice that was inward from their earlier position.",
    "ruling_source_id": "nsg_rules_team"
  }
]
